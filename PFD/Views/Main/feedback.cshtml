@model PFD.Models.feedbackViewModel

@{
    ViewData["Title"] = "feedback";
}


@section style{
    <style>
        main {
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-flow:column;
            font-family: 'Kumbh Sans', sans-serif;
        }

        body {
            background: #eee
        }

        #regForm {
            background-color: #ffffff;
            margin: 0px auto;
            font-family: Raleway;
            padding: 40px;
            border-radius: 10px;
        }

        #register {
            color: #6A1B9A;
        }

        h1 {
            text-align: center
        }

        input {
            padding: 10px;
/*            width: 100%;
*/            font-size: 17px;
            border: 1px solid #aaaaaa;
            border-radius: 10px;
            -webkit-appearance: none;
            margin-bottom: 1rem;
        }



        .tab input:focus {
            border: 1px solid #6a1b9a !important;
            outline: none;
        }

        input.invalid {
            border: 1px solid #e03a0666;
        }

        .tab {
            display: none
        }

        button {
            background-color: #6a1b9a;
            color: #ffffff;
            border: none;
            border-radius: 50%;
            padding: 10px 20px;
            font-size: 17px;
            font-family: Raleway;
            cursor: pointer;
            text-align: center;
        }

            button:hover {
                opacity: 0.8
            }

            button:focus {
                outline: none !important;
            }

        #prevBtn {
            background-color: #bbbbbb
        }

    

        .all-steps {
            text-align: center;
            margin-top: 30px;
            margin-bottom: 30px;
            width: 100%;
            display: inline-flex;
            justify-content: center;
        }

        .step {
            height: 50px;
            width: 50px;
            margin: 0 2px;
            background-color: #ff0000;
            border: none;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 15px;
            color: #fff;
            opacity: 0.5;
        }

            .step.active {
                opacity: 1
            }


            .step.finish {
                color: #fff;
                background: #6a1b9a;
                opacity: 1;
            }



        .all-steps {
            text-align: center;
            margin-top: 30px;
            margin-bottom: 30px
        }

        .thanks-message {
            display: none
        }

        .rate {
            float: left;
            width: fit-content;
        }

            .rate:not(:checked) > input {
                position: absolute;
                top: -9999px;
            }

            .rate:not(:checked) > label {
                float: right;
                width: 1em;
                overflow: hidden;
                white-space: nowrap;
                cursor: pointer;
                font-size: 50px;
                color: #ccc;
            }

                .rate:not(:checked) > label:before {
                    content: '★ ';
                }

            .rate > input:checked ~ label {
                color: #ffc700;
            }

            .rate:not(:checked) > label:hover,
            .rate:not(:checked) > label:hover ~ label {
                color: #deb217;
            }

            .rate > input:checked + label:hover,
            .rate > input:checked + label:hover ~ label,
            .rate > input:checked ~ label:hover,
            .rate > input:checked ~ label:hover ~ label,
            .rate > label:hover ~ input:checked ~ label {
                color: #c59b08;
            }

        .rate2 {
            float: left;
            width:fit-content;
        }

            .rate2:not(:checked) > input {
                position: absolute;
                top: -9999px;
            }

            .rate2:not(:checked) > label {
                float: right;
                width: 1em;
                overflow: hidden;
                white-space: nowrap;
                cursor: pointer;
                font-size: 50px;
                color: #ccc;
            }

                .rate2:not(:checked) > label:before {
                    content: '★ ';
                }

            .rate2 > input:checked ~ label {
                color: #ffc700;
            }

            .rate2:not(:checked) > label:hover,
            .rate2:not(:checked) > label:hover ~ label {
                color: #deb217;
            }

            .rate2 > input:checked + label:hover,
            .rate2 > input:checked + label:hover ~ label,
            .rate2 > input:checked ~ label:hover,
            .rate2 > input:checked ~ label:hover ~ label,
            .rate2 > label:hover ~ input:checked ~ label {
                color: #c59b08;
            }

        .rate3 {
            float: left;
            width: fit-content;
        }

            .rate3:not(:checked) > input {
                position: absolute;
                top: -9999px;
            }

            .rate3:not(:checked) > label {
                float: right;
                width: 1em;
                overflow: hidden;
                white-space: nowrap;
                cursor: pointer;
                font-size: 50px;
                color: #ccc;
            }

                .rate3:not(:checked) > label:before {
                    content: '★ ';
                }

            .rate3 > input:checked ~ label {
                color: #ffc700;
            }

            .rate3:not(:checked) > label:hover,
            .rate3:not(:checked) > label:hover ~ label {
                color: #deb217;
            }

            .rate3 > input:checked + label:hover,
            .rate3 > input:checked + label:hover ~ label,
            .rate3 > input:checked ~ label:hover,
            .rate3 > input:checked ~ label:hover ~ label,
            .rate3 > label:hover ~ input:checked ~ label {
                color: #c59b08;
            }
            
            #refForm > i{
                font-size:30px;
            }

            #comments{
                display:flex;
                flex-flow:column;
                width:80%;
                background:white;
                border-radius:10px;
                min-height:10vh;
                align-items:center;
            }

            .comment{
                width:80%;
                border-radius:20px;
                background: #E7E5E5;
            }
            
            span.ratings{
                font-size:20px;
                color : yellow;
            }
    </style>
}
<!-- Fontawesome CDN Link -->

<div class="container mt-5 pb-5">
    <div class="row d-flex justify-content-center align-items-center">
        <div class="col-md-8">
            <form id="regForm" asp-controller = "Main" asp-action = "feedback" >
                <h1 id="register">Survey Form</h1>
                <div class="all-steps" id="all-steps">
                        <span class="step"><i class="fa fa-android" aria-hidden="true"></i></span>
                        <span class="step"><i class="fa fa-microphone" aria-hidden="true"></i></span>
                        <span class="step"><i class="fa fa-thumbs-up" aria-hidden="true"></i></span>
                </div>

                 <div class="tab">
                    <h6>Do you like the ChatBot Feature?</h6>
                    <div class="rate3">
                        <input asp-for="FormFeedback.ChatBotScore" type="radio" id="star5.2"  value=5 />
                        <label for="star5.2" title="text">5 stars</label>
                            <input asp-for="FormFeedback.ChatBotScore" type="radio" id="star4.2" value=4 />
                        <label for="star4.2" title="text">4 stars</label>
                            <input asp-for="FormFeedback.ChatBotScore" type="radio" id="star3.2" value=3 />
                        <label for="star3.2" title="text">3 stars</label>
                            <input asp-for="FormFeedback.ChatBotScore" type="radio" id="star2.2" value=2 />
                        <label for="star2.2" title="text">2 stars</label>
                            <input asp-for="FormFeedback.ChatBotScore" type="radio" id="star1.2" value=1 />
                        <label for="star1.2" title="text">1 star</label>
                    </div>
                        <input asp-for="FormFeedback.ChatBotFeedback" placeholder="What improvements can be made?" oninput="this.className = ''" >
                </div>

                <div class="tab">
                    <h6>Do you like the Gesture Recognition Feature?</h6>
                    <div class="rate">
                            <input asp-for="FormFeedback.GestureScore" type="radio" id="star5.1" value="5" />
                        <label for="star5.1" title="text">5 stars</label>
                            <input asp-for="FormFeedback.GestureScore" type="radio" id="star4.1" value=4 />
                        <label for="star4.1" title="text">4 stars</label>
                            <input asp-for="FormFeedback.GestureScore" type="radio" id="star3.1" value=3 />
                        <label for="star3.1" title="text">3 stars</label>
                            <input asp-for="FormFeedback.GestureScore" type="radio" id="star2.1" value=2 />
                        <label for="star2.1" title="text">2 stars</label>
                            <input asp-for="FormFeedback.GestureScore" type="radio" id="star1.1" value=1 />
                        <label for="star1.1" title="text">1 star</label>
                    </div>
                        <input asp-for="FormFeedback.GestureFeedback" placeholder="What improvements can be made?" oninput="this.className = ''" >
                </div>

                <div class="tab">
                    <h6>Do you like the Voice Control Feature?</h6>
                    <div class="rate2">
                            <input asp-for="FormFeedback.VoiceScore" type="radio" id="star5" value="5" />
                        <label for="star5" title="text">5 stars</label>
                        <input asp-for="FormFeedback.VoiceScore" type="radio" id="star4" value="4" />
                        <label for="star4" title="text">4 stars</label>
                            <input asp-for="FormFeedback.VoiceScore" type="radio" id="star3" value="3" />
                        <label for="star3" title="text">3 stars</label>
                            <input asp-for="FormFeedback.VoiceScore" type="radio" id="star2" value="2" />
                        <label for="star2" title="text">2 stars</label>
                            <input asp-for="FormFeedback.VoiceScore" type="radio" id="star1" value="1" />
                        <label for="star1" title="text">1 star</label>
                    </div>
                        <input asp-for="FormFeedback.VoiceFeedback" or placeholder="What improvements can be made?" oninput="this.className = ''">

                </div>
                
                <div style="overflow:auto;" id="nextprevious">
                    <div style="float:right;">
                        <button type="button" id="prevBtn" onclick="nextPrev(-1)"><i class="fa fa-angle-double-left"></i></button>
                        <button type="button" id="nextBtn" onclick="nextPrev(1)"><i class="fa fa-angle-double-right"></i></button>
                    </div>
                </div>
            </form>
        </div>
    </div>



</div>


<partial name="/Views/Main/_allfeedbacks.cshtml" model="@Model.FeedbackList" />


@section Scripts{

    <script>
        var tabs = $(".tab")
        var current = 0
        tabs[current].style.display = 'grid'
        $("#prevBtn").css("pointer-events", "none");
        $(".step").eq(current).addClass("active");
        function nextPrev(n){
            tabs[current].style.display = 'none'
            
            let valid = validateForm()
            if (n>0){
                if (valid) {
                    current += n
                    $(".step").eq(current).addClass("active");
                    

                }
            }
            else{
                current += n
               
            }
            console.log(current)
            if (current == 3){
                console.log("LOL")
                console.log($("#regForm"))
                $("#regForm").submit()
            }
            else{
                tabs[current].style.display = 'grid'
                console.log(current)
            }
           
            if (current == 0) {
                $("#prevBtn").css("pointer-events", "none");
            }
            else{
                $("#prevBtn").css("pointer-events", "auto");
            }





        }

        function validateForm() {
            var x, y, i, valid = true;
            radio_check = true
            x = document.getElementsByClassName("tab");
            y = x[current].getElementsByTagName("input");

            z = x[current].querySelectorAll("input[type=radio]:checked");

            // Check if at least one radio button is selected
            if (z.length === 0) {
                radio_check = false;
            }

            if (radio_check){
                for (i = 0; i < y.length; i++) {
                    if (y[i].value == "") {
                        y[i].className += " invalid";
                        valid = false;
                    }


                }
            }
            else{
                valid = false;

            }

           
            
            if (valid) {

                document.getElementsByClassName("step")[current].className += " finish";
            }
            else{
                var element = document.getElementsByClassName("step")[current];

                if (element.classList.contains("finish")) {
                    element.classList.remove("finish");
                }
            }
            return valid;
        }

    </script>

}