@model IEnumerable<PFD.Models.Contacts>
@{
    string GetInitials(string fullName)
    {
        string[] words = fullName.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
        string initials = "";

        foreach (string word in words)
        {
            initials += word[0];
        }

        return initials.ToUpper(); // Convert initials to uppercase if needed
    }
}

@functions {
    string FormatPhoneNumber(string phoneNumber)
    {
        if (phoneNumber.Length == 11 && phoneNumber.StartsWith("+65"))
        {
            // Format the phone number as "+65 1234 1234"
            return $"{phoneNumber.Substring(0, 3)} {phoneNumber.Substring(3, 4)} {phoneNumber.Substring(7)}";
        }
        else
        {
            // Handle other cases or provide a default format
            return phoneNumber;
        }
    }
}


<div class="container d-flex flex-column justify-content-center holder mb-1" style="width:45%;">
@*    <h4 class="contact-name">Contacts (@Model.Count())</h4>*@

    @foreach (var item in Model)
    {
        <div class="container d-flex flex-row pay-row w-100 align-items-center list" data-name = "@item.Name">
            <a href='~/Main/Details/@item.ContactID' class="d-flex flex-row w-100 align-items-center contacts">
               <p class="icon">@GetInitials(@item.Name)</p>
                    <div class="d-flex flex-column align-items-left justify-content-center">
                    <p style="margin-bottom:4px; font-weight: 600;">@item.Name</p>
                    <p>@FormatPhoneNumber(@item.Number)</p>
                    </div>
                
        
            </a>
        </div>
      
 


    }
</div>


