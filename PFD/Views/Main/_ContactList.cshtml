@model IEnumerable<PFD.Models.Contacts>
@{
    string GetInitials(string fullName)
    {
        string[] words = fullName.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
        string initials = "";

        foreach (string word in words)
        {
            initials += word[0];
        }

        return initials.ToUpper(); // Convert initials to uppercase if needed
    }
}

@functions {
    string FormatPhoneNumber(string phoneNumber)
    {
        if (phoneNumber.Length == 11 && phoneNumber.StartsWith("+65"))
        {
            // Format the phone number as "+65 1234 1234"
            return $"{phoneNumber.Substring(0, 3)} {phoneNumber.Substring(3, 4)} {phoneNumber.Substring(7)}";
        }
        else
        {
            // Handle other cases or provide a default format
            return phoneNumber;
        }
    }
}


<div class="container d-flex flex-column justify-content-center holder mb-1" id="contacts_container">
@*    <h4 class="contact-name">Contacts (@Model.Count())</h4>*@

    @foreach (var item in Model)
    {
        <div class="container d-flex flex-row pay-row w-100 align-items-center list" data-name="@item.Name">
            <a href='~/Main/Details/@item.ContactID' class="d-flex flex-row w-100 align-items-center contacts">
                <p class="icon">@GetInitials(@item.Name)</p>
                <div class="d-flex flex-column align-items-left justify-content-center">
                    <b style="margin-bottom:4px; font-weight: 600;">@item.Name</b>
                    <p>@FormatPhoneNumber(@item.Number)</p>
                </div>


            </a>
        </div>
      
 


    }
</div>


<script>

    let msg = new SpeechSynthesisUtterance();
    let contacts = document.querySelectorAll('.contacts');

    contacts.forEach((contact) => {
        contact.addEventListener('click', (e) => {
            e.preventDefault(); // Prevent the default navigation behavior

            let contactName = contact.querySelector('b:nth-child(1)').innerText;
            //let phoneNumber = contact.querySelector('p:nth-child(2)').innerText;

            // Concatenate name and phone number
            msg.text = `Transfer to ${contactName}`;

            contact.style.backgroundColor = "yellow";
            speechSynthesis.speak(msg);

            let interval = setInterval(() => {
                if (!speechSynthesis.speaking) {
                    contact.style.removeProperty('background-color');
                    clearInterval(interval);

                    // Manually trigger the navigation after speech synthesis
                    window.location.href = contact.getAttribute('href');
                }
            }, 100);
        });
    });
</script>